services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: teddy-backoffice-api
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - loki
      - prometheus
    env_file:
      - .env.docker
    environment:
      - DB_HOST_READ_WRITE=postgres
      - DB_HOST_READ_ONLY=postgres
      - LOKI_URL=http://loki:3100
    volumes:
      - .:/app
      - /app/node_modules
    command: >
      sh -c "npm run start:dev"

  postgres:
    image: postgres:16-alpine
    container_name: teddy-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=teddy
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=teddy_core
    volumes:
      - postgres_data:/var/lib/postgresql/data

  loki:
    image: grafana/loki:latest
    container_name: teddy-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki

  prometheus:
    image: prom/prometheus:latest
    container_name: teddy-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: teddy-grafana
    ports:
      - "3001:3000"
    depends_on:
      - loki
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: teddy-jaeger
    ports:
      - "16686:16686"  # UI
      - "14268:14268"  # Collector HTTP
      - "6831:6831/udp"  # Collector UDP

volumes:
  postgres_data:
    driver: local
  loki_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
    