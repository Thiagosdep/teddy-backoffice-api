services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: teddy-backoffice-api
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - loki
      - prometheus
      - redis
    env_file:
      - .env.docker
    environment:
      - DB_HOST_READ_WRITE=postgres
      - DB_HOST_READ_ONLY=postgres
      - LOKI_URL=http://loki:3100
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    volumes:
      - .:/app
      - /app/node_modules
    command: >
      sh -c "npm run start:dev"

  postgres:
    image: postgres:16-alpine
    container_name: teddy-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=teddy
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=teddy_core
    volumes:
      - postgres_data:/var/lib/postgresql/data

  loki:
    image: grafana/loki:latest
    container_name: teddy-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    environment:
      - LOKI_CONFIG_PATH=/etc/loki/local-config.yaml
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    container_name: teddy-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: teddy-grafana
    ports:
      - "3001:3000"
    depends_on:
      - loki
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning

  redis:
    image: redis:alpine
    container_name: teddy-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: teddy-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      
volumes:
  postgres_data:
    driver: local
  loki_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
    